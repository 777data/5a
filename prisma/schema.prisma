generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Application {
  id           String        @id @default(uuid())
  name         String        @unique
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  environments Environment[]
  authentications Authentication[]
  apis         Api[]
}

model Api {
  id        String   @id @default(uuid())
  name      String
  url       String
  method    String
  headers   Json?
  body      Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  application   Application @relation(fields: [applicationId], references: [id])
  applicationId String

  @@index([applicationId])
}

model Authentication {
  id            String      @id @default(uuid())
  name          String      @unique
  token         String
  apiKey        String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  application   Application @relation(fields: [applicationId], references: [id])
  applicationId String

  @@index([applicationId])
}

model Environment {
  id             String          @id @default(uuid())
  name           String
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  variableValues VariableValue[]
  application    Application     @relation(fields: [applicationId], references: [id])
  applicationId  String

  @@index([applicationId])
}

model VariableValue {
  id            String      @id @default(uuid())
  name          String
  value         String
  environmentId String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  environment   Environment @relation(fields: [environmentId], references: [id], onDelete: Cascade)

  @@unique([name, environmentId])
  @@index([environmentId])
}
